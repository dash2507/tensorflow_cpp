# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
  - job: tensorflow_cpp
    pool:
      vmImage: "ubuntu-20.04"
    timeoutInMinutes: 0
    variables:
      DEBIAN_FRONTEND: noninteractive
      DIR: $(Build.SourcesDirectory)
      TF_ENABLE_XLA: 0
# Look for Version
# https://github.com/tensorflow/tensorflow/blob/555c5d61553c47121acaa5939db27af0b7ec10e9/tensorflow/tensorflow.bzl#L62
      VERSION: 2.2.0
      BRANCH_NAME: r2.2
      CONCURRENT_THREADS: 4
# Bazel Version: https://github.com/tensorflow/tensorflow/blob/r2.2/.bazelversion
      BZVERSION: 2.0.0
      BAZEL_CACHE: $DIR/bazel_cache
    
    steps:
    - bash: |
        sudo apt-get update
        sudo apt install -y build-essential curl git zip
        gcc --version
      displayName: update and install packages
    
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'

    - bash: |
        echo "##vso[task.setvariable variable=PATH]${PATH}:~/bin"
        wget https://github.com/bazelbuild/bazel/releases/download/$BZVERSION/bazel-$BZVERSION-installer-linux-x86_64.sh
        chmod +x bazel-*.sh
        ./bazel-$BZVERSION-installer-linux-x86_64.sh --user
        git clone -q --depth 1 -b $BRANCH_NAME --single-branch https://github.com/tensorflow/tensorflow tensorflow
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        python get-pip.py
      displayName: 'Install bazel and pip'

    - bash: |
        cd $DIR/tensorflow
        pip install --upgrade astunparse numpy PyYAML gast h5py six grpcio portpicker scipy scikit-learn attrs wrapt
        pip install keras_preprocessing==1.1.0 --no-deps
        yes '' | ./configure || true
      displayName: 'Install Python Libraries and Configure'
    
    # - task: Cache@2
    #   inputs:
    #     key: 'bazel | "$(Agent.OS)"'
    #     path: $(BAZEL_CACHE)
    #   displayName: bazel_cache
    
    - bash: |
        mkdir -p $DIR/artifacts
        mkdir -p $BAZEL_CACHE
        cd $DIR/tensorflow
        bazel build -j $CONCURRENT_THREADS -c dbg --strip=never --config=short_logs  --config=v2 --config=noaws --config=nogcp --config=nohdfs --config=nonccl --verbose_failures  //tensorflow:tensorflow_cc //tensorflow:tensorflow_framework //tensorflow:install_headers --noincompatible_do_not_split_linking_cmdline
        cd bazel-bin/tensorflow/ && zip -r $DIR/artifacts/tensorflow_cpp.zip include/ 
        cp libtensorflow_cc.so.$VERSION $DIR/artifacts 
        cp libtensorflow_framework.so.$VERSION $DIR/artifacts
      displayName: 'Build Tensorflow C++'

    - publish: $(DIR)/artifacts
      artifact: tensorflow_cpp.tar.gz
